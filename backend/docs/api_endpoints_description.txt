У меня получилось вот так.

# Описание HTTP API эндпоинтов сервиса Secret Guest
================================================

Файл содержит список всех доступных API-ручек, сгруппированных по уровню доступа (публичные, для пользователей, для персонала, для администраторов) и по сущностям.

---

## 1. Публичные эндпоинты (Аутентификация не требуется)

### Аутентификация
- `POST /auth/register`      : Регистрация нового пользователя
- `POST /auth/token`         : Получение пары токенов (access, refresh) по логину и паролю
- `POST /auth/refresh`       : Обновление access-токена с помощью refresh-токена
- `POST /auth/validate`      : Валидация access-токена (используется middleware, но сам эндпоинт публичный для проверки)

### Документация
- `GET /swagger/*`          : Доступ к Swagger UI для интерактивной документации API

---

## 2. Эндпоинты для аутентифицированных пользователей (Любая роль)

### Объекты размещения (Listings)
- `GET /listings`           : Получение списка всех активных объектов размещения (с пагинацией)
- `GET /listings/{id}`      : Получение детальной информации об одном объекте размещения по его ID

### Предложения (Assignments)
- `GET /assignments/my`                : Получение списка своих активных предложений
- `GET /assignments/my/{id}`           : Получение детальной информации о своем предложении по ID
- `PATCH /assignments/my/{id}/accept`  : Принять предложение
- `PATCH /assignments/my/{id}/decline` : Отклонить предложение(освободить бронь)
- `GET /assignments`                   : Получение списка свободных (доступных) предложений
- `GET /assignments/{id}`              : Получение детальной информации о свободном(доступном) предложении по ID
- `PATCH /assignments/{id}/take`       : Взять предложение(статус останется Offered, но теперь предложение можно акцептовать)

### Отчеты (Reports)
- `GET /reports/my`                  : Получение списка своих отчетов в работе
- `GET /reports/my/{id}`             : Получение своего отчета по UUID для заполнения
- `POST /reports/my/{id}`           : Обновить/сохранить черновик своего отчета
- `PATCH /reports/my/{id}/submit`    : Сдать готовый отчет на проверку
- `PATCH /reports/my/{id}/refuse`    : Отказаться от продолжения заполнения отчета

### Профили пользователей (Profiles)
- `GET /profiles/my`			   : Получение своего профиля

### Загрузка файлов (Uploads)
- `POST /uploads/generate-url`       : Сгенерировать presigned URL для загрузки файла в хранилище

---

## 3. Эндпоинты для персонала (Роли: Администратор, Модератор)

### Вх.бронирования (ota_sg_reservations)
- `GET /staff/sg_reservations`              : Получение списка поступивших от OTA бронирований
- `GET /staff/sg_reservations/{id}`         : Получение информации о поступившем от OTA бронировании по ID
- `PATCH /staff/sg_reservations/{id}/no-show` : Установка статуса No-show у бронирования OTA

### Предложения (Assignments)
- `GET /staff/assignments`                  : Получение списка всех предложений с возможностью фильтрации
- `GET /staff/assignments/{id}`             : Получение информации о любом предложении по ID
- `PATCH /staff/assignments/{id}/cancel`    : Отменить любое предложение (из любого статуса)

### Отчеты (Reports)
- `GET /staff/reports`                      : Получение списка всех отчетов с возможностью фильтрации
- `GET /staff/reports/{id}`                 : Получение информации о любом отчете по ID
- `PATCH /staff/reports/{id}/approve`       : Одобрить отчет(модерация)
- `PATCH /staff/reports/{id}/reject`        : Отклонить отчет(модерация)

### Пользователи (Users)
- `GET /staff/users`                        : Получение списка всех пользователей (с указанием их роли)

### Профили пользователей (Profiles)
- `GET /staff/profiles` 					: Получение списка всех профилей
- `GET /staff/profiles/{user_id}`	: Получение профиля пользователя по его идентификатору

### Типы ответов (Answer Types)
- `GET /staff/answer_types`                 : Получение списка всех типов ответов
- `POST /staff/answer_types`                : Создание нового типа ответа
- `GET /staff/answer_types/{id}`            : Получение типа ответа по ID
- `PATCH /staff/answer_types/{id}`          : Обновление типа ответа по ID
- `DELETE /staff/answer_types/{id}`         : Удаление типа ответа по ID

### Требования к медиа (Media Requirements)
- `GET /staff/media_requirements`           : Получение списка всех требований к медиа

### Типы объектов (Listing Types)
- `GET /staff/listing_types`                : Получение списка всех типов объектов
- `POST /staff/listing_types`               : Создание нового типа объекта
- `GET /staff/listing_types/{id}`           : Получение типа объекта по ID
- `PATCH /staff/listing_types/{id}`         : Обновление типа объекта по ID
- `DELETE /staff/listing_types/{id}`        : Удаление типа объекта по ID

### Секции чек-листа (Checklist Sections)
- `GET /staff/checklist_sections`           : Получение списка всех секций
- `POST /staff/checklist_sections`          : Создание новой секции
- `GET /staff/checklist_sections/{id}`      : Получение секции по ID
- `PATCH /staff/checklist_sections/{id}`    : Обновление секции по ID
- `DELETE /staff/checklist_sections/{id}`   : Удаление секции по ID

### Пункты чек-листа (Checklist Items)
- `GET /staff/checklist_items`              : Получение списка всех пунктов
- `POST /staff/checklist_items`             : Создание нового пункта
- `GET /staff/checklist_items/{id}`         : Получение пункта по ID
- `PATCH /staff/checklist_items/{id}`       : Обновление пункта по ID
- `DELETE /staff/checklist_items/{id}`      : Удаление пункта по ID

---

## 4. Эндпоинты только для Администраторов

### Объекты размещения (Listings)
- `POST /admin/listings`            : Создание нового объекта размещения

### Вх.бронирования (ota_sg_reservations)
- `POST /admin/sg_reservations`     : Создание нового поступившего от OTA бронирования

{
    "swagger": "2.0",
    "info": {
        "description": "This is the API for the Secret Guest application.",
        "title": "Secret Guest API",
        "contact": {},
        "version": "1.0"
    },
    "basePath": "/",
    "paths": {
        "/admin/assignments": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Creates new assignment object. Available for admin only.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Assignments (Admin)"
                ],
                "summary": "Create new Assignment (Admin)",
                "parameters": [
                    {
                        "description": "Assignment Payload",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/secret_guest.CreateAssignmentRequestDTO"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Bearer Access Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.AssignmentResponseDTO"
                        }
                    },
                    "400": {
                        "description": "Invalid payload",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Assignment cannot be created (e.g., wrong payload)",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/listings": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Creates new listing object. Available for admin only.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Listings (Admin)"
                ],
                "summary": "Create new Listing (Admin)",
                "parameters": [
                    {
                        "description": "Listing Payload",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/secret_guest.CreateListingRequestDTO"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Bearer Access Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ListingResponseDTO"
                        }
                    },
                    "400": {
                        "description": "Invalid payload",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Listing cannot be created (e.g., wrong payload)",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/sg_reservations": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Handles OTA Reservations Events. Available for admin only.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Reservations (Admin)"
                ],
                "summary": "Handles OTA Reservations Events (Admin)",
                "parameters": [
                    {
                        "description": "OTA Reservation Payload",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/secret_guest.OTAReservationRequestDTO"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Bearer Access Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid payload",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/answer_types": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns a list of all Answer Types with optional filtering.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Answer Types (Staff)"
                ],
                "summary": "Get Answer Types (Staff)",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "multi",
                        "description": "Filter by one or more Answer Type IDs",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "description": "Filter by one or more Answer Type slugs",
                        "name": "slug",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Bearer Access Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.AnswerTypesResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Creates a new Answer Type.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Answer Types (Staff)"
                ],
                "summary": "Create Answer Type (Staff)",
                "parameters": [
                    {
                        "description": "Answer Type Payload",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/secret_guest.CreateAnswerTypeRequestDTO"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Bearer Access Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.AnswerTypeResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid payload",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Duplicate slug",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/answer_types/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns a single Answer Type by its ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Answer Types (Staff)"
                ],
                "summary": "Get Answer Type By ID (Staff)",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Answer Type ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bearer Access Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.AnswerTypeResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid ID format",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Answer Type not found",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Deletes an existing Answer Type. Deletion will fail if the type is used in any checklist items.",
                "tags": [
                    "Answer Types (Staff)"
                ],
                "summary": "Delete Answer Type (Staff)",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Answer Type ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bearer Access Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Invalid ID",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Answer Type not found",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Answer Type is in use and cannot be deleted",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Updates an existing Answer Type.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Answer Types (Staff)"
                ],
                "summary": "Update Answer Type (Staff)",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Answer Type ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Answer Type Payload",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/secret_guest.UpdateAnswerTypeRequestDTO"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Bearer Access Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.AnswerTypeResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid payload or ID",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Answer Type not found",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Duplicate slug",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/assignments": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns a paginated list of all assignments with optional filters. Available for staff only.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Assignments (Staff)"
                ],
                "summary": "Get All Assignments (Staff)",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number for pagination",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 50,
                        "description": "Number of items per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Filter by reporter (user) ID",
                        "name": "reporter_id",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "multi",
                        "description": "Filter by one or more status IDs",
                        "name": "status_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Bearer Access Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.AssignmentsResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/assignments/my": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns a paginated list of assignments for the current user.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Assignments (User)"
                ],
                "summary": "Get My Assignments",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number for pagination",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "Number of items per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Bearer Access Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.AssignmentsResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/assignments/my/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns details of a specific assignment belonging to the current user.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Assignments (User)"
                ],
                "summary": "Get My Assignment By ID",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Assignment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bearer Access Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.AssignmentResponseDTO"
                        }
                    },
                    "400": {
                        "description": "Invalid assignment ID format",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Assignment not found or does not belong to user",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/assignments/my/{id}/accept": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Accept an assignment offer. This will start an asynchronous process to generate a report.",
                "tags": [
                    "Assignments (User)"
                ],
                "summary": "Accept My Assignment",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Assignment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bearer Access Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted"
                    },
                    "400": {
                        "description": "Invalid assignment ID format",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Assignment not found or does not belong to user",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Assignment cannot be accepted (e.g., wrong status)",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/assignments/my/{id}/decline": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Decline an assignment offer.",
                "tags": [
                    "Assignments (User)"
                ],
                "summary": "Decline My Assignment",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Assignment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bearer Access Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Invalid assignment ID format",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Assignment not found or does not belong to user",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Assignment cannot be declined (e.g., wrong status)",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/assignments/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns details of any assignment. Available for staff only.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Assignments (Staff)"
                ],
                "summary": "Get Assignment By ID (Staff)",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Assignment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bearer Access Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.AssignmentResponseDTO"
                        }
                    },
                    "400": {
                        "description": "Invalid assignment ID format",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Assignment not found",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/assignments/{id}/cancel": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Cancel an assignment offer.",
                "tags": [
                    "Assignments (Staff)"
                ],
                "summary": "Decline Assignment",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Assignment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bearer Access Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Invalid assignment ID format",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Assignment not found or does not belong to user",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Assignment cannot be cancelled",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/refresh": {
            "post": {
                "description": "Refresh a JWT token using a refresh token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Refresh an existing JWT token",
                "parameters": [
                    {
                        "description": "Refresh Token",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.RefreshTokenRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/auth.RefreshTokenResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/auth.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Invalid or expired refresh token",
                        "schema": {
                            "$ref": "#/definitions/auth.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/auth.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "description": "Register a user with username, password, and email",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Register a new user",
                "parameters": [
                    {
                        "description": "User Registration Info",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.RegisterUserRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "message: User registered successfully",
                        "schema": {
                            "$ref": "#/definitions/auth.RegisterUserResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request body or validation error",
                        "schema": {
                            "$ref": "#/definitions/auth.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "User with this username or email already exists",
                        "schema": {
                            "$ref": "#/definitions/auth.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/auth.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/token": {
            "post": {
                "description": "Generates a new JWT access token for authentication.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Generate a new access token",
                "parameters": [
                    {
                        "description": "User Credentials",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.GenerateTokenRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/auth.GenerateTokenResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request body or validation error",
                        "schema": {
                            "$ref": "#/definitions/auth.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Invalid username or password",
                        "schema": {
                            "$ref": "#/definitions/auth.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/auth.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/validate": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Validates the provided JWT access token.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Validate an access token",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Access Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/auth.ValidateTokenResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized or invalid token",
                        "schema": {
                            "$ref": "#/definitions/auth.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/auth.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/checklist_items": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns a list of all Checklist Items.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Checklist Items (Staff)"
                ],
                "summary": "Get Checklist Items (Staff)",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "multi",
                        "description": "Filter by one or more Checklist Item IDs",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "description": "Filter by one or more Checklist Item slugs",
                        "name": "slug",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "multi",
                        "description": "Filter by one or more Listing Type IDs",
                        "name": "listing_type_id",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "description": "Filter by one or more Listing Type slugs",
                        "name": "listing_type_slug",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Filter by active status",
                        "name": "is_active",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Bearer Access Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ChecklistItemsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Creates a new Checklist Item.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Checklist Items (Staff)"
                ],
                "summary": "Create Checklist Item (Staff)",
                "parameters": [
                    {
                        "description": "Checklist Item Payload",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/secret_guest.CreateChecklistItemRequestDTO"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Bearer Access Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ChecklistItemResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid payload or non-existent foreign key",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Duplicate slug for this listing type",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/checklist_items/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns a single Checklist Item by its ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Checklist Items (Staff)"
                ],
                "summary": "Get Checklist Item By ID (Staff)",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Checklist Item ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bearer Access Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ChecklistItemResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid ID format",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Checklist Item not found",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Deletes an existing Checklist Item.",
                "tags": [
                    "Checklist Items (Staff)"
                ],
                "summary": "Delete Checklist Item (Staff)",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Checklist Item ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bearer Access Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Invalid ID",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Checklist Item not found",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Updates an existing Checklist Item.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Checklist Items (Staff)"
                ],
                "summary": "Update Checklist Item (Staff)",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Checklist Item ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Checklist Item Payload",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/secret_guest.UpdateChecklistItemRequestDTO"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Bearer Access Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ChecklistItemResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid payload or ID",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Checklist Item not found",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Duplicate slug or other constraint violation",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/checklist_sections": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns a list of all Checklist Sections.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Checklist Sections (Staff)"
                ],
                "summary": "Get Checklist Sections (Staff)",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "multi",
                        "description": "Filter by one or more Checklist Section IDs",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "description": "Filter by one or more Checklist Section slugs",
                        "name": "slug",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "multi",
                        "description": "Filter by one or more Listing Type IDs",
                        "name": "listing_type_id",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "description": "Filter by one or more Listing Type slugs",
                        "name": "listing_type_slug",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Bearer Access Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ChecklistSectionsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Creates a new Checklist Section.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Checklist Sections (Staff)"
                ],
                "summary": "Create Checklist Section (Staff)",
                "parameters": [
                    {
                        "description": "Checklist Section Payload",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/secret_guest.CreateChecklistSectionRequestDTO"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Bearer Access Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ChecklistSectionResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid payload or non-existent listing_type_id",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Duplicate slug for this listing type",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/checklist_sections/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns a single Checklist Section by its ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Checklist Sections (Staff)"
                ],
                "summary": "Get Checklist Section By ID (Staff)",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Checklist Section ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bearer Access Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ChecklistSectionResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid ID format",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Checklist Section not found",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Deletes an existing Checklist Section. Deletion will fail if the section is used in any checklist items.",
                "tags": [
                    "Checklist Sections (Staff)"
                ],
                "summary": "Delete Checklist Section (Staff)",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Checklist Section ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bearer Access Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Invalid ID",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Checklist Section not found",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Checklist Section is in use and cannot be deleted",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Updates an existing Checklist Section.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Checklist Sections (Staff)"
                ],
                "summary": "Update Checklist Section (Staff)",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Checklist Section ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Checklist Section Payload",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/secret_guest.UpdateChecklistSectionRequestDTO"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Bearer Access Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ChecklistSectionResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid payload or ID",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Checklist Section not found",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Duplicate slug for this listing type",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/listing_types": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns a list of all Listing Types.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Listing Types (Staff)"
                ],
                "summary": "Get Listing Types (Staff)",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "multi",
                        "description": "Filter by one or more Listing Type IDs",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "description": "Filter by one or more Listing Type slugs",
                        "name": "slug",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Bearer Access Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ListingTypesResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Creates a new Listing Type.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Listing Types (Staff)"
                ],
                "summary": "Create Listing Type (Staff)",
                "parameters": [
                    {
                        "description": "Listing Type Payload",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/secret_guest.CreateListingTypeRequestDTO"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Bearer Access Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ListingTypeResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid payload",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Duplicate slug",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/listing_types/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns a single Listing Type by its ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Listing Types (Staff)"
                ],
                "summary": "Get Listing Type By ID (Staff)",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Listing Type ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bearer Access Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ListingTypeResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid ID format",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Listing Type not found",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Deletes an existing Listing Type. Deletion will fail if the type is used in any listings.",
                "tags": [
                    "Listing Types (Staff)"
                ],
                "summary": "Delete Listing Type (Staff)",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Listing Type ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bearer Access Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Invalid ID",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Listing Type not found",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Listing Type is in use and cannot be deleted",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Updates an existing Listing Type.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Listing Types (Staff)"
                ],
                "summary": "Update Listing Type (Staff)",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Listing Type ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Listing Type Payload",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/secret_guest.UpdateListingTypeRequestDTO"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Bearer Access Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ListingTypeResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid payload or ID",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Listing Type not found",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Duplicate slug",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/listings": {
            "get": {
                "description": "Returns a paginated list of all active listings.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Listings (Public)"
                ],
                "summary": "Get Public Listings",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number for pagination",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "Number of items per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "multi",
                        "description": "Filter by one or more listing type IDs",
                        "name": "listing_type_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ListingsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/listings/{id}": {
            "get": {
                "description": "Returns detailed information about a single active listing.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Listings (Public)"
                ],
                "summary": "Get Listing By ID",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Listing ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ListingResponseDTO"
                        }
                    },
                    "400": {
                        "description": "Invalid listing ID format",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Listing not found",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/media_requirements": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns a paginated list of all Media Requirements.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Media Requirements (Staff)"
                ],
                "summary": "Get Media Requirements (Staff)",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "multi",
                        "description": "Filter by one or more Media Requirements IDs",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "description": "Filter by one or more Media Requirements slugs",
                        "name": "slug",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Bearer Access Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.MediaRequirementsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/reports": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns a paginated list of all reports. Available for staff only.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Reports (Staff)"
                ],
                "summary": "Get All Reports (Staff)",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number for pagination",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 50,
                        "description": "Number of items per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Filter by reporter (user) ID",
                        "name": "reporter_id",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "multi",
                        "description": "Filter by one or more status IDs",
                        "name": "status_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Bearer Access Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ReportsResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/reports/my": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns a paginated list of reports for the current user that are in progress.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Reports (User)"
                ],
                "summary": "Get My Reports",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number for pagination",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "Number of items per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Bearer Access Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ReportsResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/reports/my/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns a specific report with its schema and answers for the current user to fill out.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Reports (User)"
                ],
                "summary": "Get My Report By ID",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Report ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bearer Access Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ReportResponseDTO"
                        }
                    },
                    "400": {
                        "description": "Invalid report ID format",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Report not found or does not belong to user",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Saves the current state of a report draft.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Reports (User)"
                ],
                "summary": "Update My Report (Save Draft)",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Report ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated checklist schema with answers",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/secret_guest.UpdateReportRequestDTO"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Bearer Access Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Invalid request body or report ID",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Report not found or does not belong to user",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Report is not in a draft state and cannot be edited",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/reports/my/{id}/refuse": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Refuses a report, setting its status to 'refused'. The report can no longer be edited after this.",
                "tags": [
                    "Reports (User)"
                ],
                "summary": "Refuse My Report",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Report ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bearer Access Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Invalid report ID",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Report not found or does not belong to user",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Report is not in a draft state",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/reports/my/{id}/submit": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Submits a completed report for review. The report can no longer be edited after this.",
                "tags": [
                    "Reports (User)"
                ],
                "summary": "Submit My Report",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Report ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bearer Access Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Invalid report ID or report is not complete",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Report not found or does not belong to user",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Report is not in a draft state",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/reports/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns details of any report. Available for staff only.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Reports (Staff)"
                ],
                "summary": "Get Report By ID (Staff)",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Report ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bearer Access Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ReportResponseDTO"
                        }
                    },
                    "400": {
                        "description": "Invalid report ID format",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Report not found",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/reports/{id}/approve": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Approves a submitted secret guest report. Available for staff only.",
                "tags": [
                    "Reports (Staff)"
                ],
                "summary": "Approve a Report (Staff)",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Report ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bearer Access Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Invalid report ID format",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Report not found",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Report cannot be approved (e.g., wrong status)",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/reports/{id}/reject": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Rejects a submitted secret guest report. Available for staff only. This action does not require a request body.",
                "tags": [
                    "Reports (Staff)"
                ],
                "summary": "Reject a Report (Staff)",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Report ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bearer Access Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Invalid report ID format",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Report not found",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Report cannot be rejected (e.g., wrong status)",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/sg_reservations": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns a paginated list of all OTA reservations. Available for staff only.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Reservations (Staff)"
                ],
                "summary": "Get All OTA Reservations (Staff)",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number for pagination",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 50,
                        "description": "Number of items per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "multi",
                        "description": "Filter by one or more status IDs",
                        "name": "status_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Bearer Access Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.AssignmentsResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/sg_reservations/{id}": {
            "get": {
                "description": "Returns detailed information about a single OTA reservation.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Reservations (Staff)"
                ],
                "summary": "Get OTA Reservation By ID",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "OTA Reservation ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bearer Access Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.OTAReservationResponseDTO"
                        }
                    },
                    "400": {
                        "description": "Invalid OTA Reservation ID format",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "OTA Reservation not found",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/sg_reservations/{id}/no-show": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Changes OTA Reservation status to NoShow. Available for staff only.",
                "tags": [
                    "Reservations (Staff)"
                ],
                "summary": "Hide an OTA Reservation (Staff)",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Reservation ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bearer Access Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Invalid reservation ID format",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Reservation not found",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/uploads/generate-url": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Generates a presigned URL and form data for uploading a file directly to the file storage.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Uploads"
                ],
                "summary": "Generate Upload URL",
                "parameters": [
                    {
                        "description": "File information",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/secret_guest.GenerateUploadURLRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Bearer Access Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.GenerateUploadURLResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request body or file name",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns a paginated list of all users. Available for staff only.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users (Staff)"
                ],
                "summary": "Get All Users (Staff)",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number for pagination",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 50,
                        "description": "Number of items per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Bearer Access Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.UsersResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/secret_guest.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "auth.ErrorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "An unexpected error occurred."
                }
            }
        },
        "auth.GenerateTokenRequest": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "auth.GenerateTokenResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "refresh_token": {
                    "type": "string"
                }
            }
        },
        "auth.RefreshTokenRequest": {
            "type": "object",
            "properties": {
                "refresh_token": {
                    "type": "string"
                }
            }
        },
        "auth.RefreshTokenResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "refresh_token": {
                    "type": "string"
                }
            }
        },
        "auth.RegisterUserRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "auth.RegisterUserResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "User registered successfully"
                }
            }
        },
        "auth.ValidateTokenResponse": {
            "type": "object",
            "properties": {
                "user_id": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "models.ChecklistSchema": {
            "type": "object",
            "additionalProperties": true
        },
        "secret_guest.AnswerTypeResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "meta": {
                    "type": "object"
                },
                "name": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                }
            }
        },
        "secret_guest.AnswerTypesResponse": {
            "type": "object",
            "properties": {
                "answer_types": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/secret_guest.AnswerTypeResponse"
                    }
                }
            }
        },
        "secret_guest.AssignmentResponseDTO": {
            "type": "object",
            "properties": {
                "accepted_at": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "deadline": {
                    "type": "string"
                },
                "declined_at": {
                    "type": "string"
                },
                "expires_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "listing": {
                    "$ref": "#/definitions/secret_guest.ListingShortResponse"
                },
                "purpose": {
                    "type": "string"
                },
                "reporter": {
                    "$ref": "#/definitions/secret_guest.ReporterResponse"
                },
                "status": {
                    "$ref": "#/definitions/secret_guest.StatusResponse"
                }
            }
        },
        "secret_guest.AssignmentsResponse": {
            "type": "object",
            "properties": {
                "assignments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/secret_guest.AssignmentResponseDTO"
                    }
                },
                "page": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "secret_guest.ChecklistItemAnswerTypeInfo": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "meta": {
                    "type": "object"
                },
                "name": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                }
            }
        },
        "secret_guest.ChecklistItemMediaRequirementInfo": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                }
            }
        },
        "secret_guest.ChecklistItemResponse": {
            "type": "object",
            "properties": {
                "answer_type": {
                    "$ref": "#/definitions/secret_guest.ChecklistItemAnswerTypeInfo"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_active": {
                    "type": "boolean"
                },
                "listing_type_id": {
                    "type": "integer"
                },
                "listing_type_slug": {
                    "type": "string"
                },
                "media_allowed_types": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "media_max_files": {
                    "type": "integer"
                },
                "media_requirement": {
                    "$ref": "#/definitions/secret_guest.ChecklistItemMediaRequirementInfo"
                },
                "section": {
                    "$ref": "#/definitions/secret_guest.ChecklistItemSectionInfo"
                },
                "slug": {
                    "type": "string"
                },
                "sort_order": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "secret_guest.ChecklistItemSectionInfo": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "slug": {
                    "type": "string"
                },
                "sort_order": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "secret_guest.ChecklistItemsResponse": {
            "type": "object",
            "properties": {
                "checklist_items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/secret_guest.ChecklistItemResponse"
                    }
                }
            }
        },
        "secret_guest.ChecklistSectionResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "listing_type_id": {
                    "type": "integer"
                },
                "listing_type_slug": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "sort_order": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "secret_guest.ChecklistSectionsResponse": {
            "type": "object",
            "properties": {
                "checklist_sections": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/secret_guest.ChecklistSectionResponse"
                    }
                }
            }
        },
        "secret_guest.CreateAnswerTypeRequestDTO": {
            "type": "object",
            "required": [
                "name",
                "slug"
            ],
            "properties": {
                "meta": {
                    "description": "Meta может быть null",
                    "type": "object"
                },
                "name": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                }
            }
        },
        "secret_guest.CreateAssignmentRequestDTO": {
            "type": "object",
            "required": [
                "code",
                "expires_at",
                "listing_id",
                "purpose",
                "reporter_id"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "expires_at": {
                    "type": "string"
                },
                "listing_id": {
                    "type": "string"
                },
                "purpose": {
                    "type": "string"
                },
                "reporter_id": {
                    "type": "string"
                }
            }
        },
        "secret_guest.CreateChecklistItemRequestDTO": {
            "type": "object",
            "required": [
                "answer_type_id",
                "listing_type_id",
                "media_requirement_id",
                "section_id",
                "slug",
                "title"
            ],
            "properties": {
                "answer_type_id": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "listing_type_id": {
                    "type": "integer"
                },
                "media_allowed_types": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "media_max_files": {
                    "type": "integer",
                    "minimum": 0
                },
                "media_requirement_id": {
                    "type": "integer"
                },
                "section_id": {
                    "type": "integer"
                },
                "slug": {
                    "type": "string"
                },
                "sort_order": {
                    "type": "integer",
                    "minimum": 0
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "secret_guest.CreateChecklistSectionRequestDTO": {
            "type": "object",
            "required": [
                "listing_type_id",
                "slug",
                "title"
            ],
            "properties": {
                "listing_type_id": {
                    "type": "integer"
                },
                "slug": {
                    "type": "string"
                },
                "sort_order": {
                    "type": "integer",
                    "minimum": 0
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "secret_guest.CreateListingRequestDTO": {
            "type": "object",
            "required": [
                "address",
                "city",
                "code",
                "country",
                "description",
                "latitude",
                "listing_type_id",
                "longitude",
                "title"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "listing_type_id": {
                    "type": "integer"
                },
                "longitude": {
                    "type": "number"
                },
                "main_picture": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "secret_guest.CreateListingTypeRequestDTO": {
            "type": "object",
            "required": [
                "name",
                "slug"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                }
            }
        },
        "secret_guest.ErrorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "An unexpected error occurred."
                }
            }
        },
        "secret_guest.GenerateUploadURLRequest": {
            "type": "object",
            "properties": {
                "fileName": {
                    "type": "string"
                }
            }
        },
        "secret_guest.GenerateUploadURLResponse": {
            "type": "object",
            "properties": {
                "form_data": {
                    "$ref": "#/definitions/secret_guest.UploadFormDataDTO"
                },
                "headers": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "method": {
                    "type": "string"
                },
                "upload_url": {
                    "type": "string"
                }
            }
        },
        "secret_guest.ListingResponseDTO": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "listing_type": {
                    "$ref": "#/definitions/secret_guest.ListingTypeResponse"
                },
                "longitude": {
                    "type": "number"
                },
                "main_picture": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "secret_guest.ListingShortResponse": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "listing_type": {
                    "$ref": "#/definitions/secret_guest.ListingTypeResponse"
                },
                "longitude": {
                    "type": "number"
                },
                "main_picture": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "secret_guest.ListingTypeResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                }
            }
        },
        "secret_guest.ListingTypesResponse": {
            "type": "object",
            "properties": {
                "listing_types": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/secret_guest.ListingTypeResponse"
                    }
                }
            }
        },
        "secret_guest.ListingsResponse": {
            "type": "object",
            "properties": {
                "listings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/secret_guest.ListingResponseDTO"
                    }
                },
                "page": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "secret_guest.MediaRequirementResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                }
            }
        },
        "secret_guest.MediaRequirementsResponse": {
            "type": "object",
            "properties": {
                "media_requirements": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/secret_guest.MediaRequirementResponse"
                    }
                }
            }
        },
        "secret_guest.OTAReservationDTO": {
            "type": "object",
            "required": [
                "booking_number",
                "dates",
                "guests",
                "listing",
                "ota_id",
                "pricing",
                "status"
            ],
            "properties": {
                "booking_number": {
                    "type": "string"
                },
                "dates": {
                    "$ref": "#/definitions/secret_guest.OTAReservationDates"
                },
                "guests": {
                    "$ref": "#/definitions/secret_guest.OTAReservationGuests"
                },
                "listing": {
                    "$ref": "#/definitions/secret_guest.OTAReservationListingDTO"
                },
                "ota_id": {
                    "type": "string"
                },
                "pricing": {
                    "$ref": "#/definitions/secret_guest.OTAReservationPricing"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "secret_guest.OTAReservationDates": {
            "type": "object",
            "required": [
                "checkin",
                "checkout"
            ],
            "properties": {
                "checkin": {
                    "type": "string"
                },
                "checkout": {
                    "type": "string"
                }
            }
        },
        "secret_guest.OTAReservationGuests": {
            "type": "object",
            "required": [
                "adults",
                "children"
            ],
            "properties": {
                "adults": {
                    "type": "integer",
                    "minimum": 0
                },
                "children": {
                    "type": "integer",
                    "minimum": 0
                }
            }
        },
        "secret_guest.OTAReservationListingDTO": {
            "type": "object",
            "required": [
                "address",
                "city",
                "country",
                "description",
                "id",
                "latitude",
                "listing_type",
                "longitude",
                "main_picture",
                "title"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "listing_type": {
                    "$ref": "#/definitions/secret_guest.ListingTypeResponse"
                },
                "longitude": {
                    "type": "number"
                },
                "main_picture": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "secret_guest.OTAReservationPricing": {
            "type": "object",
            "required": [
                "breakdown",
                "currency",
                "total"
            ],
            "properties": {
                "breakdown": {
                    "$ref": "#/definitions/secret_guest.OTAReservationPricingBreakdown"
                },
                "currency": {
                    "type": "string"
                },
                "total": {
                    "type": "integer",
                    "minimum": 0
                }
            }
        },
        "secret_guest.OTAReservationPricingBreakdown": {
            "type": "object",
            "required": [
                "nights",
                "per_night"
            ],
            "properties": {
                "nights": {
                    "type": "integer",
                    "minimum": 0
                },
                "per_night": {
                    "type": "integer",
                    "minimum": 0
                }
            }
        },
        "secret_guest.OTAReservationRequestDTO": {
            "type": "object",
            "required": [
                "received_at",
                "reservation",
                "source"
            ],
            "properties": {
                "received_at": {
                    "type": "string"
                },
                "reservation": {
                    "$ref": "#/definitions/secret_guest.OTAReservationDTO"
                },
                "source": {
                    "type": "string"
                }
            }
        },
        "secret_guest.OTAReservationResponseDTO": {
            "type": "object",
            "required": [
                "ota_id"
            ],
            "properties": {
                "bookingNumber": {
                    "type": "string"
                },
                "checkinDate": {
                    "type": "string"
                },
                "checkoutDate": {
                    "type": "string"
                },
                "listingID": {
                    "type": "string"
                },
                "ota_id": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/secret_guest.StatusResponse"
                }
            }
        },
        "secret_guest.ReportResponseDTO": {
            "type": "object",
            "properties": {
                "assignment_id": {
                    "type": "string"
                },
                "checklist_schema": {
                    "$ref": "#/definitions/models.ChecklistSchema"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "listing": {
                    "$ref": "#/definitions/secret_guest.ListingShortResponse"
                },
                "purpose": {
                    "type": "string"
                },
                "reporter": {
                    "$ref": "#/definitions/secret_guest.ReporterResponse"
                },
                "status": {
                    "$ref": "#/definitions/secret_guest.StatusResponse"
                },
                "submitted_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "secret_guest.ReporterResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "secret_guest.ReportsResponse": {
            "type": "object",
            "properties": {
                "page": {
                    "type": "integer"
                },
                "reports": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/secret_guest.ReportResponseDTO"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "secret_guest.StatusResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                }
            }
        },
        "secret_guest.UpdateAnswerTypeRequestDTO": {
            "type": "object",
            "properties": {
                "meta": {
                    "description": "Для обновления/очистки meta передаем либо новый JSON, либо null",
                    "type": "object"
                },
                "name": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                }
            }
        },
        "secret_guest.UpdateChecklistItemRequestDTO": {
            "type": "object",
            "properties": {
                "answer_type_id": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "listing_type_id": {
                    "type": "integer"
                },
                "media_allowed_types": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "media_max_files": {
                    "type": "integer",
                    "minimum": 0
                },
                "media_requirement_id": {
                    "type": "integer"
                },
                "section_id": {
                    "type": "integer"
                },
                "slug": {
                    "type": "string"
                },
                "sort_order": {
                    "type": "integer",
                    "minimum": 0
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "secret_guest.UpdateChecklistSectionRequestDTO": {
            "type": "object",
            "properties": {
                "listing_type_id": {
                    "type": "integer"
                },
                "slug": {
                    "type": "string"
                },
                "sort_order": {
                    "type": "integer",
                    "minimum": 0
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "secret_guest.UpdateListingTypeRequestDTO": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                }
            }
        },
        "secret_guest.UpdateReportRequestDTO": {
            "type": "object",
            "properties": {
                "checklist_schema": {
                    "$ref": "#/definitions/models.ChecklistSchema"
                }
            }
        },
        "secret_guest.UploadFormDataDTO": {
            "type": "object",
            "properties": {
                "expire": {
                    "type": "string"
                },
                "fileName": {
                    "type": "string"
                },
                "folder": {
                    "type": "string"
                },
                "publicKey": {
                    "type": "string"
                },
                "signature": {
                    "type": "string"
                },
                "tags": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "secret_guest.UserResponseDTO": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "role_id": {
                    "type": "integer"
                },
                "role_name": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "secret_guest.UsersResponse": {
            "type": "object",
            "properties": {
                "page": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/secret_guest.UserResponseDTO"
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Type \"Bearer\" followed by a space and a JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}